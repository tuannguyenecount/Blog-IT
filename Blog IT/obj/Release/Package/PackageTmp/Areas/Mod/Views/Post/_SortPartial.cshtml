@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Blog_IT.Models.Post>

<table class="table table-bordered">
    <thead class="grid-header " style="background:#40769a;color:#fff;">
        <tr>
            <th>
                Hình bìa
            </th>
            <th class="text-center">
                @Ajax.ActionLink("ID", "Sort", new { sortName = "id", sortBy = ViewBag.sortNext }, new AjaxOptions() { HttpMethod = "Get", AllowCache = false, UpdateTargetId = "tbl", InsertionMode = InsertionMode.Replace, OnFailure = "alert('Xảy ra lỗi.')" }, new { @class = "color-white" })

            </th>
            <th>
                @Ajax.ActionLink("Tiêu đề", "Sort", new { sortName = "title", sortBy = ViewBag.sortNext }, new AjaxOptions() { HttpMethod = "Get", AllowCache = false, UpdateTargetId = "tbl", InsertionMode = InsertionMode.Replace, OnFailure = "alert('Xảy ra lỗi.')" }, new { @class = "color-white" })
            </th>
            <th>
                @Ajax.ActionLink("Lượt xem", "Sort", new { sortName = "view", sortBy = ViewBag.sortNext }, new AjaxOptions() { HttpMethod = "Get", AllowCache = false, UpdateTargetId = "tbl", InsertionMode = InsertionMode.Replace, OnFailure = "alert('Xảy ra lỗi.')" }, new { @class = "color-white" })
            </th>
            <th>
                @Ajax.ActionLink("Trạng thái", "Sort", new { sortName = "show", sortBy = ViewBag.sortNext }, new AjaxOptions() { HttpMethod = "Get", AllowCache = false, UpdateTargetId = "tbl", InsertionMode = InsertionMode.Replace, OnFailure = "alert('Xảy ra lỗi.')" }, new { @class = "color-white" })
            </th>
        </tr>
    </thead>
    <tbody id="tbody">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/Photos/Posts/@item.Image" width="90" height="60" />
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.PostID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Views)
                </td>
                <td>
                    @if (item.Show)
                    {
                        <span class="text-success">Đã phê duyệt</span>
                    }
                    else
                    {
                        <span>Chưa phê duyệt</span>
                    }
                </td>
            </tr>
            <tr>
                <td colspan="5" class="text-center">
                    <a href="@Url.Action("Details", new { id = item.PostID})" class="btn btn-blue btn-xs"><span class="fa fa-eye"></span> Xem chi tiết</a>
                    @if (item.Show == false)
                    {
                        <a class="btn btn-default btn-xs" href="@Url.Action("Demo","Post",new { alias = item.Alias, area=""})" target="_blank"><i class="fa fa-eye"></i> Xem thử</a>

                    }
                    <a href="@Url.Action("Edit", new { id = item.PostID, page = ViewBag.Page})" class="btn btn-default btn-xs"> <span class="fa fa-edit"></span>Sửa</a>
                    <a href="@Url.Action("Delete", new { id = item.PostID})" class="btn btn-default btn-xs"><span class="fa fa-remove"></span> Xóa</a>
                    <a href="@Url.Action("TagsOfPost",  new { id = item.PostID })" class="btn btn-default btn-xs"><span class="fa fa-tags"></span> Tags (@item.Tags.Count)</a>

                </td>
            </tr>
        }
        <tr>
            <td colspan="6" class="text-center">
                @Html.PagedListPager(Model, Page => Url.Action("Pager", new { page = Page, sortname = "id", sortby = "desc" }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded }, new AjaxOptions() { AllowCache = true, HttpMethod = "Get", OnFailure = "alert('Lỗi  ajax');", UpdateTargetId = "tbody", InsertionMode = InsertionMode.Replace }))
            </td>
        </tr>
    </tbody>
</table>

